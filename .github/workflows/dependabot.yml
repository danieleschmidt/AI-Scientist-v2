name: ğŸ”„ Dependency Management

on:
  schedule:
    - cron: '0 8 * * 1'  # Weekly on Monday at 8 AM
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools pip-review
    
    - name: Update requirements
      run: |
        pip-compile --upgrade requirements.in
        pip-compile --upgrade requirements-dev.in
    
    - name: Check for security vulnerabilities
      run: |
        pip install safety
        safety check -r requirements.txt --json --output vulnerability-report.json || true
    
    - name: Create pull request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "ğŸ”„ Weekly dependency updates"
        body: |
          ## Dependency Updates
          
          This PR contains weekly dependency updates generated by automated workflow.
          
          ### Changes
          - Updated Python dependencies to latest compatible versions
          - Security vulnerability check included
          
          ### Testing
          All tests should pass before merging this PR.
          
          Auto-generated by: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        branch: dependency-updates
        delete-branch: true
    
    - name: Upload vulnerability report
      uses: actions/upload-artifact@v3
      with:
        name: vulnerability-report
        path: vulnerability-report.json

  license-audit:
    name: License Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pip-licenses licensecheck
    
    - name: Generate license report
      run: |
        pip-licenses --format=json --output-file=licenses.json
        pip-licenses --format=html --output-file=licenses.html
        licensecheck --format=json > license-compliance.json
    
    - name: Upload license reports
      uses: actions/upload-artifact@v3
      with:
        name: license-reports
        path: |
          licenses.json
          licenses.html
          license-compliance.json

  outdated-check:
    name: Check Outdated Packages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check for outdated packages
      run: |
        pip list --outdated --format=json > outdated-packages.json
        pip list --outdated
    
    - name: Upload outdated packages report
      uses: actions/upload-artifact@v3
      with:
        name: outdated-packages
        path: outdated-packages.json