apiVersion: v1
kind: Service
metadata:
  name: ai-scientist
  namespace: ai-scientist
  labels:
    app.kubernetes.io/name: ai-scientist
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: ai-scientist-platform
    app.kubernetes.io/managed-by: kubectl
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    external-dns.alpha.kubernetes.io/hostname: ai-scientist.yourdomain.com
spec:
  type: LoadBalancer
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hours
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-scientist
    app.kubernetes.io/component: application

---
apiVersion: v1
kind: Service
metadata:
  name: ai-scientist-internal
  namespace: ai-scientist
  labels:
    app.kubernetes.io/name: ai-scientist
    app.kubernetes.io/component: internal-service
    app.kubernetes.io/part-of: ai-scientist-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: health
    port: 8443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-scientist
    app.kubernetes.io/component: application

---
apiVersion: v1
kind: Service
metadata:
  name: ai-scientist-redis
  namespace: ai-scientist
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: ai-scientist-platform
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-scientist-redis
  namespace: ai-scientist
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: "7.0"
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: ai-scientist-platform
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: "7.0"
        app.kubernetes.io/component: cache
        app.kubernetes.io/part-of: ai-scientist-platform
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        
      containers:
      - name: redis
        image: redis:7.0-alpine
        imagePullPolicy: IfNotPresent
        
        args:
        - redis-server
        - /etc/redis/redis.conf
        - --requirepass
        - $(REDIS_PASSWORD)
        
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-scientist-secrets
              key: redis-password
        
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
          readOnly: true
        - name: redis-data
          mountPath: /data
        
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data

---
apiVersion: v1
kind: Service
metadata:
  name: ai-scientist-worker
  namespace: ai-scientist
  labels:
    app.kubernetes.io/name: ai-scientist-worker
    app.kubernetes.io/component: worker-service
    app.kubernetes.io/part-of: ai-scientist-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  clusterIP: None  # Headless service for workers
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-scientist-worker
    app.kubernetes.io/component: worker

---
apiVersion: v1
kind: Service
metadata:
  name: ai-scientist-monitoring
  namespace: ai-scientist
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: monitoring-service
    app.kubernetes.io/part-of: ai-scientist-platform
spec:
  type: ClusterIP
  ports:
  - name: prometheus
    port: 9090
    targetPort: 9090
    protocol: TCP
  - name: grafana
    port: 3000
    targetPort: 3000
    protocol: TCP
  - name: alertmanager
    port: 9093
    targetPort: 9093
    protocol: TCP
  selector:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: monitoring