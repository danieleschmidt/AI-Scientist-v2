# AI Scientist v2 Production Prometheus Configuration
# Comprehensive monitoring setup for Kubernetes deployment

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ai-scientist-production'
    environment: 'production'
    version: 'v2.0.0'

rule_files:
  - "rules/*.yml"
  - "alerts/*.yml"

alerting:
  alertmanagers:
    - kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - ai-scientist
      relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: alertmanager
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: web

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # AI Scientist main application
  - job_name: 'ai-scientist-app'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - ai-scientist
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: kubernetes_name
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
    scrape_interval: 15s
    scrape_timeout: 10s

  # AI Scientist workers
  - job_name: 'ai-scientist-workers'
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - ai-scientist
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
      action: keep
      regex: worker
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: (.+)
      target_label: __meta_kubernetes_pod_container_port_number
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
    - source_labels: [__meta_kubernetes_pod_node_name]
      action: replace
      target_label: kubernetes_node

  # Redis metrics
  - job_name: 'redis'
    kubernetes_sd_configs:
    - role: service
      namespaces:
        names:
        - ai-scientist
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name]
      action: keep
      regex: ai-scientist-redis
    - source_labels: [__meta_kubernetes_service_port_name]
      action: keep
      regex: redis
    scrape_interval: 30s

  # Node metrics (system-level monitoring)
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - monitoring
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name]
      action: keep
      regex: node-exporter
    - source_labels: [__meta_kubernetes_endpoint_port_name]
      action: keep
      regex: node-exporter
    scrape_interval: 30s

  # GPU metrics (NVIDIA DCGM exporter)
  - job_name: 'dcgm-exporter'
    kubernetes_sd_configs:
    - role: endpoints
      namespaces:
        names:
        - gpu-operator
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_name]
      action: keep
      regex: nvidia-dcgm-exporter
    - source_labels: [__meta_kubernetes_endpoint_port_name]
      action: keep
      regex: gpu-metrics
    scrape_interval: 30s
    scrape_timeout: 10s

  # Kubernetes API server metrics
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  # Kubernetes nodes
  - job_name: 'kubernetes-nodes'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name

  # cAdvisor (container metrics)
  - job_name: 'kubernetes-cadvisor'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

  # Ingress controller metrics
  - job_name: 'ingress-nginx'
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - ingress-nginx
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
      action: keep
      regex: ingress-nginx
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      target_label: __meta_kubernetes_pod_container_port_number
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__

  # Service monitors for custom applications
  - job_name: 'ai-scientist-custom-metrics'
    kubernetes_sd_configs:
    - role: service
      namespaces:
        names:
        - ai-scientist
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_ai_scientist_metrics]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_ai_scientist_metrics_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__meta_kubernetes_service_annotation_ai_scientist_metrics_port]
      action: replace
      regex: (.+)
      target_label: __meta_kubernetes_service_port_number
    - source_labels: [__address__, __meta_kubernetes_service_annotation_ai_scientist_metrics_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    scrape_interval: 60s

  # Health check endpoints
  - job_name: 'health-checks'
    kubernetes_sd_configs:
    - role: service
      namespaces:
        names:
        - ai-scientist
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_health_check]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_port_name]
      action: keep
      regex: health
    metrics_path: /health
    scrape_interval: 10s
    scrape_timeout: 5s

# Remote storage configuration (for long-term storage)
remote_write:
  - url: "${REMOTE_WRITE_URL:-}"
    headers:
      "X-Scope-OrgID": "${TENANT_ID:-ai-scientist}"
    queue_config:
      max_samples_per_send: 1000
      batch_send_deadline: 5s
      min_shards: 1
      max_shards: 200
      max_retries: 10
      min_backoff: 30ms
      max_backoff: 100ms
    metadata_config:
      send: true
      send_interval: 30s
      max_samples_per_send: 500

remote_read:
  - url: "${REMOTE_READ_URL:-}"
    headers:
      "X-Scope-OrgID": "${TENANT_ID:-ai-scientist}"

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 50GB
    wal-compression: true
    no-lockfile: false
    allow-overlapping-blocks: false
    min-block-duration: 2h
    max-block-duration: 25h

# Query configuration
query:
  timeout: 2m
  max-concurrency: 20
  max-samples: 50000000
  lookback-delta: 5m

# Web configuration
web:
  console.templates: consoles
  console.libraries: console_libraries
  page-title: "AI Scientist v2 Prometheus"
  cors.origin: "https://ai-scientist.yourdomain.com"
  enable-lifecycle: true
  enable-admin-api: false
  route-prefix: /
  external-url: "https://prometheus.ai-scientist.yourdomain.com"