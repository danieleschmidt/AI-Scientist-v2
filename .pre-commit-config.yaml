repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(ai_scientist/blank_|.*\.md$)
      - id: end-of-file-fixer
        exclude: ^(ai_scientist/blank_|experiments/|results/)
      - id: check-yaml
        exclude: ^(ai_scientist/blank_|experiments/|results/)
      - id: check-json
        exclude: ^(ai_scientist/blank_|experiments/|results/)
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Code formatting
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML, types-setuptools]
        exclude: ^(ai_scientist/blank_|experiments/|results/|cache/|logs/)

  # Remove unused imports
  - repo: https://github.com/pycqa/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --in-place
        exclude: ^(ai_scientist/blank_|__init__\.py$)

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  - repo: local
    hooks:
      - id: security-check
        name: Security Check
        entry: python
        language: system
        args:
          - -c
          - |
            import subprocess
            import sys
            
            # Check for os.popen usage
            result = subprocess.run(['grep', '-r', 'os.popen', 'ai_scientist/'], capture_output=True)
            if result.returncode == 0:
                print('SECURITY ERROR: os.popen found in code')
                sys.exit(1)
            
            # Check for shell=True in subprocess
            result = subprocess.run(['grep', '-r', 'shell=True', 'ai_scientist/'], capture_output=True)
            if result.returncode == 0:
                print('SECURITY ERROR: shell=True found in subprocess calls')
                sys.exit(1)
                
            print('âœ“ Security checks passed')
        files: '\.py$'
        pass_filenames: false

      - id: run-tests
        name: Run Tests
        entry: python3
        language: system
        args: [run_tests.py]
        files: '\.py$'
        pass_filenames: false