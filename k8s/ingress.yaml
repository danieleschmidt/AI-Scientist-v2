apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-scientist-ingress
  namespace: ai-scientist
  labels:
    app.kubernetes.io/name: ai-scientist
    app.kubernetes.io/version: v2.0.0
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: ai-scientist-platform
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    
    # Load balancing
    nginx.ingress.kubernetes.io/load-balance: "ewma"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: http01
    
    # External DNS
    external-dns.alpha.kubernetes.io/hostname: ai-scientist.terragonlabs.ai
spec:
  tls:
  - hosts:
    - ai-scientist.terragonlabs.ai
    - api.ai-scientist.terragonlabs.ai
    secretName: ai-scientist-tls
  rules:
  - host: ai-scientist.terragonlabs.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-scientist
            port:
              number: 80
  - host: api.ai-scientist.terragonlabs.ai
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: ai-scientist
            port:
              number: 80
      - path: /health
        pathType: Exact
        backend:
          service:
            name: ai-scientist
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: ai-scientist
            port:
              number: 8080

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-scientist-network-policy
  namespace: ai-scientist
  labels:
    app.kubernetes.io/name: ai-scientist
    app.kubernetes.io/version: v2.0.0
    app.kubernetes.io/component: network-policy
    app.kubernetes.io/part-of: ai-scientist-platform
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ai-scientist
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  # Allow ingress for metrics from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  # Allow internal communication between pods
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: ai-scientist-platform
    ports:
    - protocol: TCP
      port: 8000
  egress:
  # Allow egress to Redis
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow egress to external APIs (DNS, HTTP, HTTPS)
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  # Allow egress to Kubernetes API server
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443