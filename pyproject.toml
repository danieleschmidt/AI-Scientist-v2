[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-scientist-v2"
version = "2.0.0"
description = "Autonomous scientific research system via agentic tree search"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Terragon Labs", email = "contact@terragonlabs.com"}
]
maintainers = [
    {name = "Terragon Labs", email = "contact@terragonlabs.com"}
]
keywords = ["ai", "machine-learning", "research", "automation", "science"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.11"
dependencies = [
    "anthropic>=0.25.0",
    "backoff>=2.2.0",
    "openai>=1.0.0",
    "pypdf>=3.0.0",
    "pymupdf4llm>=0.0.5",
    "numpy>=1.21.0",
    "transformers>=4.21.0",
    "datasets>=2.0.0",
    "tiktoken>=0.4.0",
    "tqdm>=4.64.0",
    "rich>=12.0.0",
    "humanize>=4.0.0",
    "dataclasses-json>=0.5.7",
    "funcy>=1.17.0",
    "black>=22.0.0",
    "genson>=1.2.0",
    "shutup>=0.2.0",
    "python-igraph>=0.10.0",
    "coolname>=2.0.0",
    "jsonschema>=4.0.0",
    "omegaconf>=2.2.0",
    "psutil>=5.9.0",
    "PyYAML>=6.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "pandas>=1.5.0",
    "IPython>=8.0.0",
    "Pillow>=9.0.0",
    "PyMuPDF>=1.23.0",
    "huggingface_hub>=0.16.0",
    "requests>=2.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.1.0",
    "black>=22.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pre-commit>=3.0.0",
    "memory-profiler>=0.60.0",
    "line-profiler>=4.0.0",
    "semgrep>=1.0.0",
    "types-requests>=2.28.0",
    "types-PyYAML>=6.0.0",
    "types-setuptools>=65.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/SakanaAI/AI-Scientist-v2"
Repository = "https://github.com/SakanaAI/AI-Scientist-v2"
Documentation = "https://github.com/SakanaAI/AI-Scientist-v2/docs"
"Bug Tracker" = "https://github.com/SakanaAI/AI-Scientist-v2/issues"

[project.scripts]
ai-scientist = "launch_scientist_bfts:main"
ai-ideation = "ai_scientist.perform_ideation_temp_free:main"
ai-writeup = "ai_scientist.perform_writeup:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | experiments
  | results
  | cache
  | logs
  | ai_scientist/blank_icbinb_latex
  | ai_scientist/blank_icml_latex
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = [
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "build/*",
    "dist/*",
    "*.egg-info/*",
    "experiments/*",
    "results/*",
    "cache/*",
    "logs/*",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "datasets.*",
    "anthropic.*",
    "openai.*",
    "tiktoken.*",
    "rich.*",
    "tqdm.*",
    "igraph.*",
    "coolname.*",
    "genson.*",
    "shutup.*",
    "omegaconf.*",
    "pymupdf4llm.*",
    "pypdf.*",
    "PyMuPDF.*",
    "huggingface_hub.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=ai_scientist",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
    "gpu: marks tests that require GPU",
    "api: marks tests that require API access",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["ai_scientist"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
    "*/experiments/*",
    "*/results/*",
    "*/cache/*",
    "*/logs/*",
    "ai_scientist/blank_*/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "experiments", "results", "cache", "logs"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
exclude = ["*test*.py", "**/test_*.py"]